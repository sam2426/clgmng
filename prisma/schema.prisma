// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id          String       @id @default(uuid()) @db.Uuid
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  firstName   String
  lastName    String
  email       String       @unique
  enrollments Enrollment[]
}

model Professor {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  firstName String
  lastName  String
  email     String   @unique
  courses   Course[]
}

model Course {
  id           String       @id @default(uuid()) @db.Uuid
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  code         String       @unique
  title        String
  description  String?
  professorId  String?      @db.Uuid
  professor    Professor?   @relation(fields: [professorId], references: [id])
  enrollments  Enrollment[]
}

model Enrollment {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  studentId String   @db.Uuid
  courseId  String   @db.Uuid
  grade     Float?

  student   Student  @relation(fields: [studentId], references: [id])
  course    Course   @relation(fields: [courseId], references: [id])

  @@unique([studentId, courseId])
}
