apiVersion: v1
kind: Service
metadata:
  name: test-app
spec:
  selector:
    app: test-app
  ports:
    - protocol: TCP
      port: 3456
      targetPort: 3456
  type: LoadBalancer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-config
data:
  DATABASE_URL: "postgresql://postgres:postgres@postgres-service:5432/college?schema=public"
  NODE_ENV: "production"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: college-mgmt-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: test-app #the selector is used to find the pods to be managed by the deployment. it has to match the labels in the template.
  template:
    metadata:
      labels:
        app: test-app #Both key and value are random identifiers, can be anything
    spec:
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.35
          command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
        - name: test-node # name can be anything.
          image: sam2426/clg-mngmt:3
          imagePullPolicy: Always
          ports:
            - containerPort: 3456
          env:
            - name: DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DATABASE_URL
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: NODE_ENV
          command: ["sh", "-c"]
          args:
            - |
              echo "Waiting for database to be ready..."
              echo "Building application..."
              npm run build
              echo "Running database migrations..."
              npx prisma migrate deploy
              echo "Seeding database..."
              npx prisma db seed
              echo "Starting application..."
              npm run start:dev